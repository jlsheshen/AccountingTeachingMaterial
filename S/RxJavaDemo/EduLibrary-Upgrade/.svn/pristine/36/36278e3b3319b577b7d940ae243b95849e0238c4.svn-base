package com.edu.library;

import java.util.Date;
import java.util.List;

import android.app.Activity;
import android.app.ActivityManager;
import android.app.ActivityManager.RunningAppProcessInfo;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;

/**
 * Activity基类，包含活跃度搜集功能
 * 
 * @author lucher
 */
public abstract class EduBaseActivity extends Activity {

	protected Context mContext;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		mContext = this;
	}

	/**
	 * 初始化数据
	 */
	protected abstract void initData();

	/**
	 * 初始化视图
	 */
	protected abstract void initView();

	@Override
	protected void onResume() {
		if (!EduConstant.isActive) {
			System.out.println("onResume--------->唤醒！！！");
			// app 从后台唤醒，进入前台
			EduConstant.isActive = true;
			EduConstant.startTime = new Date();
		} else {
			System.out.println("onResume--------->切换！！！");
		}
		super.onResume();
	}

	@Override
	protected void onStop() {
		if (!isAppOnForeground()) {
			// app 进入后台
			Log.e("onStop", "进入后台");
			System.out.println("onStop--------->进入后台！！！");
			EduConstant.isActive = false;
			if (EduConstant.startTime != null) {
				Log.e("inSert------------>", "插入数据!!!");
				Log.e("onStop", "插入数据!!!");
				Log.e("onStop", "插入数据!!!");
				new UsingInfoThread(getApplicationContext(), "", EduConstant.startTime, new Date()).start();
				EduConstant.startTime = null;
			}
		} else {
			Log.e("onStop", "正常关闭！！！");
			System.out.println("onStop--------->正常关闭！！！");
		}
		super.onStop();
	}

	/**
	 * 程序是否在前台运行
	 * 
	 * @return
	 */
	public boolean isAppOnForeground() {
		ActivityManager activityManager = (ActivityManager) getApplicationContext().getSystemService(Context.ACTIVITY_SERVICE);
		String packageName = getApplicationContext().getPackageName();

		List<RunningAppProcessInfo> appProcesses = activityManager.getRunningAppProcesses();
		if (appProcesses == null)
			return false;

		for (RunningAppProcessInfo appProcess : appProcesses) {
			// The name of the process that this object is associated with.
			if (appProcess.processName.equals(packageName) && appProcess.importance == RunningAppProcessInfo.IMPORTANCE_FOREGROUND) {
				return true;
			}
		}

		return false;
	}

	/**
	 * 界面跳转
	 * 
	 * @param cls
	 */
	protected void startActivity(Class cls) {
		Intent intent = new Intent(this, cls);
		startActivity(intent);
	}

	/**
	 * 界面跳转，带参数
	 * 
	 * @param context
	 * @param cls
	 * @param bundle
	 */
	protected void startActivity(Class cls, Bundle bundle) {
		Intent intent = new Intent(this, cls);
		intent.putExtras(bundle);
		startActivity(intent);
	}
}
